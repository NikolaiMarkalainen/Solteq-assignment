services:
  solteq-dev-frontend:
    container_name: solteq-dev-frontend
    image: solteq-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      VITE_API_URL: http://localhost:5173
    ports:
      - 5173:5173
    volumes:
      - ./frontend/:/frontend
  solteq-dev-api:
    container_name: solteq-dev-api
    image: solteq-api:latest
    build:
      context: ./backend/Solteq-server
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS:
    ports:
      - 5151:5151
    volumes:
      - ./backend/Solteq-server:/backend
    depends_on:
      database:
        condition: service_healthy
    restart: always
  solteq-dev-database:
    image: postgres:latest
    container_name: solteq-dev-database
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - 5433
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - .backend/app/data:/data/database
  nginx:
    image: nginx
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - solteq-dev-frontend
      - solteq-dev-api
volumes: {}
